{"remainingRequest":"C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\src\\http.js","dependencies":[{"path":"C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\src\\http.js","mtime":1564476722795},{"path":"C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message, Loading } from 'element-ui';\nimport router from \"./router\";\nvar loading; //开始动画\n\nfunction startLoading() {\n  loading = Loading.service({\n    lock: true,\n    text: \"拼命加载中\",\n    background: 'rgba(0,0,0,0.7)'\n  });\n} //结束动画\n\n\nfunction endLoading() {\n  loading.close();\n} //请求拦截\n\n\naxios.interceptors.request.use(function (config) {\n  //加载动画\n  startLoading();\n\n  if (localStorage.eleToken) {\n    //设置同意请求header\n    config.headers.Authorization = localStorage.eleToken;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //响应拦截\n\naxios.interceptors.response.use(function (response) {\n  //结束加载动画\n  endLoading();\n  return response;\n}, function (error) {\n  //错误提醒\n  endLoading();\n  Message.error(error.response.data); //获取错误状态码\n\n  var status = error.response.status;\n\n  if (status == 401) {\n    //401代表token失效\n    Message.error(\"token失效了\"); //清楚token\n\n    localStorage.removeItem('eleToken'); //重新调转回登陆页面\n\n    router.push('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["C:\\工作\\learning\\vue-Project\\node-demo\\node-app\\client\\src\\http.js"],"names":["axios","Message","Loading","router","loading","startLoading","service","lock","text","background","endLoading","close","interceptors","request","use","config","localStorage","eleToken","headers","Authorization","error","Promise","reject","response","data","status","removeItem","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAiBC,OAAjB,QAAgC,YAAhC;AACA,OAAOC,MAAP;AACA,IAAIC,OAAJ,C,CACA;;AACA,SAASC,YAAT,GAAuB;AACnBD,EAAAA,OAAO,GAACF,OAAO,CAACI,OAAR,CAAgB;AACrBC,IAAAA,IAAI,EAAC,IADgB;AAErBC,IAAAA,IAAI,EAAC,OAFgB;AAGrBC,IAAAA,UAAU,EAAC;AAHU,GAAhB,CAAR;AAOH,C,CACD;;;AACA,SAASC,UAAT,GAAqB;AACjBN,EAAAA,OAAO,CAACO,KAAR;AAGH,C,CACD;;;AAEAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAE;AACnC;AACIV,EAAAA,YAAY;;AACZ,MAAGW,YAAY,CAACC,QAAhB,EAAyB;AACrB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA6BH,YAAY,CAACC,QAA1C;AACH;;AACD,SAAQF,MAAR;AACH,CARL,EASI,UAAAK,KAAK,EAAE;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACC,CAXL,E,CAaA;;AACApB,KAAK,CAACY,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CAAgC,UAAAS,QAAQ,EAAE;AACtC;AACIb,EAAAA,UAAU;AACV,SAAQa,QAAR;AACH,CAJL,EAKI,UAAAH,KAAK,EAAE;AACH;AACAV,EAAAA,UAAU;AACVT,EAAAA,OAAO,CAACmB,KAAR,CAAcA,KAAK,CAACG,QAAN,CAAeC,IAA7B,EAHG,CAIH;;AAJG,MAKGC,MALH,GAKWL,KAAK,CAACG,QALjB,CAKGE,MALH;;AAMH,MAAGA,MAAM,IAAE,GAAX,EAAe;AACX;AACAxB,IAAAA,OAAO,CAACmB,KAAR,CAAc,UAAd,EAFW,CAGX;;AACAJ,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB,EAJW,CAKX;;AACAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY,QAAZ;AAEH;;AACD,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CArBL;AAuBA,eAAepB,KAAf","sourcesContent":["import axios from 'axios';\r\nimport { Message,Loading } from 'element-ui';\r\nimport router from './router'\r\nlet loading;\r\n//开始动画\r\nfunction startLoading(){\r\n    loading=Loading.service({\r\n       lock:true,\r\n       text:\"拼命加载中\",\r\n       background:'rgba(0,0,0,0.7)'\r\n\r\n    });\r\n\r\n}\r\n//结束动画\r\nfunction endLoading(){\r\n    loading.close();\r\n   \r\n\r\n}\r\n//请求拦截\r\n\r\naxios.interceptors.request.use(config=>{\r\n    //加载动画\r\n        startLoading();\r\n        if(localStorage.eleToken){\r\n            //设置同意请求header\r\n            config.headers.Authorization=localStorage.eleToken;\r\n        }\r\n        return  config;\r\n    },\r\n    error=>{\r\n    return Promise.reject(error)\r\n    }\r\n)\r\n//响应拦截\r\naxios.interceptors.response.use(response=>{\r\n    //结束加载动画\r\n        endLoading();\r\n        return  response;\r\n    },\r\n    error=>{\r\n        //错误提醒\r\n        endLoading();\r\n        Message.error(error.response.data)\r\n        //获取错误状态码\r\n        const{status}=error.response;\r\n        if(status==401){\r\n            //401代表token失效\r\n            Message.error(\"token失效了\")\r\n            //清楚token\r\n            localStorage.removeItem('eleToken')\r\n            //重新调转回登陆页面\r\n            router.push('/login')\r\n\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\nexport default axios;"]}]}